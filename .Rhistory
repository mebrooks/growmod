#organize data#
data$fID=factor(data$ID)#
data=transform(data, it=t-min(t),#
					iID=as.numeric(fID)-min(as.numeric(fID))#
			)#
obs=na.omit(data[,c("size", "iID", "it")])#
nind=length(unique(obs$iID))#
ntimes=length(unique(data$it))#
mintime=min(data$t)#
#
indivdat=ddply(data, ~iID, summarize, t0=t0[1], T=max(t), #
					bad=any(!(t0[1]:max(t) %in% t)))#
if(any(indivdat$bad)){stop("Each individual must have a row of data for every timepoint from t0 to max(t), even when size observations are missing. Those rows can have NA in the size column, but must contain any predictors needed for formulaX and formulaM.")}#
if(any(is.na(indivdat$t0))){stop("Each individual must have a birth time (t0).")}#
#
#take care of repeated measures at the same time point#
noreps=ddply(data, ~iID+it, summarize, size=mean(size))#
preddat=join(noreps, data, match="first") #
noreps$size[is.na(noreps$size)]=mean(noreps$size, na.rm=TRUE)#
tmp= preddat[, c('it', 'iID')]#no rep sizes#
tmp$value=0:(nrow(tmp)-1)#
tmp2=reshape::cast(tmp, iID~it, fill= NAint)[,-1]#
lookup =as.matrix(tmp2)
summary(obs)
summary(dat
)
summary(dat)
data=dat
data$fID=factor(data$ID)#
data=transform(data, it=t-min(t),#
					iID=as.numeric(fID)-min(as.numeric(fID))#
			)#
obs=na.omit(data[,c("size", "iID", "it")])#
nind=length(unique(obs$iID))#
ntimes=length(unique(data$it))#
mintime=min(data$t)
indivdat=ddply(data, ~iID, summarize, t0=t0[1], T=max(t), #
					bad=any(!(t0[1]:max(t) %in% t)))#
if(any(indivdat$bad)){stop("Each individual must have a row of data for every timepoint from t0 to max(t), even when size observations are missing. Those rows can have NA in the size column, but must contain any predictors needed for formulaX and formulaM.")}#
if(any(is.na(indivdat$t0))){stop("Each individual must have a birth time (t0).")}#
#
#take care of repeated measures at the same time point#
noreps=ddply(data, ~iID+it, summarize, size=mean(size))#
preddat=join(noreps, data, match="first") #
noreps$size[is.na(noreps$size)]=mean(noreps$size, na.rm=TRUE)#
tmp= preddat[, c('it', 'iID')]#no rep sizes#
tmp$value=0:(nrow(tmp)-1)#
tmp2=reshape::cast(tmp, iID~it, fill= NAint)[,-1]#
lookup =as.matrix(tmp2)
sigma_obs=0.0255
sigma_obs=0.0355
Ldat=list(obs=obs$size , #logsize observed#
		indiv_obs=obs$iID, #indiv corresponding to observed size#
		time_obs=obs$it, #time corresponding to observed size#
		t0= indivdat$t0-mintime,#
		T= indivdat$T-mintime,#
		indiv_size= preddat $ iID,#
		time_size= preddat $it,#
		age_size=preddat$t-preddat$t0,#
		lookup= lookup,#
		sigma_obs=sigma_obs,#
		Predictors= preddat,#
		NAint=NAint#
	)
summary(Ldat$Predictors)
subset(Ldat$Predictors, is.na(t))
data$fID=factor(data$ID)#
data=transform(data, it=t-min(t),#
					iID=as.numeric(fID)-min(as.numeric(fID))#
			)#
obs=na.omit(data[,c("size", "iID", "it")])#
nind=length(unique(obs$iID))#
ntimes=length(unique(data$it))#
mintime=min(data$t)#
#
indivdat=ddply(data, ~iID, summarize, t0=t0[1], T=max(t), #
					bad=any(!(t0[1]:max(t) %in% t)))#
if(any(indivdat$bad)){stop("Each individual must have a row of data for every timepoint from t0 to max(t), even when size observations are missing. Those rows can have NA in the size column, but must contain any predictors needed for formulaX and formulaM.")}#
if(any(is.na(indivdat$t0))){stop("Each individual must have a birth time (t0).")}#
#
#take care of repeated measures at the same time point#
noreps=ddply(data, ~iID+it, summarize, size=mean(size))#
preddat=join(noreps, data, match="first")
?join
head(data)
names(data)
grep(names(data), "size")
grep("size", names(data))
preddat=join(noreps, data[,-grep("size", names(data))], match="first")
? roxygenize
roxygenize()
roxygenize("growmod")
library(growmod)
?simobs
library(roxygen2)
?roxygenize
library(roxygen2);roxygenize(growmod)
library(roxygen2);roxygenize("growmod")
library(roxygen2);roxygenize("growmod", roclets = "namespace")
library(roxygen2);roxygenize("growmod/R", roclets = "namespace")
library(growmod)#
#
true=c("(Intercept)"=1, age=0,  "I(age^2)"=0, size=.6, "size:age"=0, sigma_proc=.01, time_growth_sd=.1, indiv_growth_sd=.1, indiv_age_growth_sd=0, indiv_cor=0, size0_mu=2.5, size0_sd=1)#
#
sg=simobs(true, nind=1000, ntime=40)#
#
m1=growmod(~1, ~1, data=sg, REcohort=FALSE)#
summary(m1)
summary(m1$sdr,"fixed")
true=c("(Intercept)"=1, age=0,  "I(age^2)"=0, size=.6, "size:age"=0, sigma_proc=.01, time_growth_sd=.1, indiv_growth_sd=.1, indiv_age_growth_sd=0, indiv_cor=0, size0_mu=2.5, size0_sd=1)#
sg=simobs(true, nind=100, ntime=20)#
m1=growmod(~1, ~1, data=sg, REcohort=FALSE)#
summary(m1)
library(growmod)#
true=c("(Intercept)"=1, age=0,  "I(age^2)"=0, size=.6, "size:age"=0, sigma_proc=.01, time_growth_sd=.1, indiv_growth_sd=.1, indiv_age_growth_sd=0, indiv_cor=0, size0_mu=2.5, size0_sd=1)#
sg=simobs(true, nind=100, ntime=20)#
m1=growmod(~1, ~1, data=sg, REcohort=FALSE)#
summary(m1)
mod
cf
cf=summary(mod$sdr, "fixed")#
	nf=rownames(cf)#
	take0=grep("beta", nf)#
	take0=c(take0, grep("eta", nf))
take0
nf
cf=summary(mod$sdr, "fixed")#
	nf=rownames(cf)#
	take0=grep("beta", nf)#
	take0=unique(c(take0, grep("eta", nf)))#
	if(size0) {#
		take0=c(take0, grep("theta", nf))#
		nf[nf=="theta"]=paste0("size0 model ",mod$Bnames)#
	}#
	nf[nf=="beta"]=mod$Xnames#
	nf[nf=="eta"]=paste0("size:",mod$Mnames)#
	nf[nf=="size:(Intercept)"]="size"#
	rownames(cf)=nf#
	cf2=cf[take0, ]
cr=summary(mod$sdr, "report")#
	nr=rownames(cr)#
	take=grep("growth_sd",nr)#
	take=c(take, grep("sigma_obs",nr))#
	take=c(take, grep("sigma_proc",nr))#
	take=c(take, grep("indiv_cor",nr))#
	if(CV) { take = c(take, grep("CV",nr))}#
	if(size0) { take = c(take, grep("size0_sd",nr))}#
	cr2=cr[take, ]#
	c2=as.data.frame(rbind(cf2,cr2))#
  	c2$var=rownames(c2)#
  	colnames(c2)[1]="est"#
	colnames(c2)[2]="se"#
	c3=transform(c2, "t value"=est/se)
c3
extract_coefs=function(mod, CV=FALSE, size0=FALSE)#
{#
#takes  results of growmod() and returns a data frame of est, sd, z.value, and names of coefficients#
	cf=summary(mod$sdr, "fixed")#
	nf=rownames(cf)#
	take0=grep("beta", nf)#
	take0=unique(c(take0, grep("eta", nf)))#
	if(size0) {#
		take0=c(take0, grep("theta", nf))#
		nf[nf=="theta"]=paste0("size0 model ",mod$Bnames)#
	}#
	nf[nf=="beta"]=mod$Xnames#
	nf[nf=="eta"]=paste0("size:",mod$Mnames)#
	nf[nf=="size:(Intercept)"]="size"#
	rownames(cf)=nf#
	cf2=cf[take0, ]#
#
	cr=summary(mod$sdr, "report")#
	nr=rownames(cr)#
	take=grep("growth_sd",nr)#
	take=c(take, grep("sigma_obs",nr))#
	take=c(take, grep("sigma_proc",nr))#
	take=c(take, grep("indiv_cor",nr))#
	if(CV) { take = c(take, grep("CV",nr))}#
	if(size0) { take = c(take, grep("size0_sd",nr))}#
	cr2=cr[take, ]#
	c2=as.data.frame(rbind(cf2,cr2))#
  	c2$var=rownames(c2)#
  	colnames(c2)[1]="est"#
	colnames(c2)[2]="se"#
	c3=transform(c2, "t value"=est/se)#
	return(c3)#
}
summary(m1)
extract_coefs(m1)
mod=m1
cf=summary(mod$sdr, "fixed")#
	nf=rownames(cf)
which(nf=="beta")
library(growmod)#
true=c("(Intercept)"=1, age=0,  "I(age^2)"=0, size=.6, "size:age"=0, sigma_proc=.01, time_growth_sd=.1, indiv_growth_sd=.1, indiv_age_growth_sd=0, indiv_cor=0, size0_mu=2.5, size0_sd=1)#
sg=simobs(true, nind=1000, ntime=20)#
m1=growmod(~1, ~1, data=sg, REcohort=FALSE)#
summary(m1)
